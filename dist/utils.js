"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getListIndex = exports.populateCommitUrl = exports.getLists = exports.getDefaultBranch = exports.getIssueComment = exports.getIssue = exports.getReviewComments = exports.getCommitHash = exports.getRepositoryOwner = exports.getRepository = exports.getOwner = exports.getActionType = exports.getCardNumber = exports.getCommitMessage = void 0;
const models_1 = require("./models");
const context = models_1.git.context;
const getCommitMessage = () => context.payload.head_commit.message;
exports.getCommitMessage = getCommitMessage;
const getCardNumber = () => context.payload.head_commit.message.match(/\d+/g)[0];
exports.getCardNumber = getCardNumber;
const getActionType = () => context.payload.action;
exports.getActionType = getActionType;
const getOwner = () => context.payload.commits[0].author.username;
exports.getOwner = getOwner;
const getRepository = () => context.repo.repo;
exports.getRepository = getRepository;
const getRepositoryOwner = () => context.repo.owner;
exports.getRepositoryOwner = getRepositoryOwner;
const getCommitHash = () => context.sha;
exports.getCommitHash = getCommitHash;
const getReviewComments = () => context.payload.review.comments;
exports.getReviewComments = getReviewComments;
const getIssue = () => context.payload.issue;
exports.getIssue = getIssue;
const getIssueComment = () => { var _a; return (_a = context.payload.issue) === null || _a === void 0 ? void 0 : _a.comments; };
exports.getIssueComment = getIssueComment;
const getDefaultBranch = () => { var _a; return (_a = context.payload.repository) === null || _a === void 0 ? void 0 : _a.default_branch; };
exports.getDefaultBranch = getDefaultBranch;
const getLists = () => models_1.TR_LISTS.split(',');
exports.getLists = getLists;
const populateCommitUrl = (payload) => `https://github.com/${payload.owner}/${payload.repo}/commit/${payload.sha}`;
exports.populateCommitUrl = populateCommitUrl;
const getListIndex = (lists, target) => lists.map(item => item.name).indexOf(target);
exports.getListIndex = getListIndex;
